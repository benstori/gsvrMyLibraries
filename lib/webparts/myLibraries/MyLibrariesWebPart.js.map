{"version":3,"sources":["webparts/myLibraries/MyLibrariesWebPart.ts"],"names":[],"mappings":"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","file":"webparts/myLibraries/MyLibrariesWebPart.js","sourcesContent":["import { Version } from '@microsoft/sp-core-library';\r\nimport { sp, Items, ItemVersion } from \"@pnp/sp\";\r\n\r\nimport {\r\n  Environment,\r\n  EnvironmentType\r\n } from '@microsoft/sp-core-library';\r\n\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\n\r\nimport { escape } from '@microsoft/sp-lodash-subset';\r\n\r\nimport styles from './MyLibrariesWebPart.module.scss';\r\n\r\nimport * as strings from 'MyLibrariesWebPartStrings';\r\n\r\nimport {\r\n  SPHttpClient,\r\n  SPHttpClientResponse   \r\n } from '@microsoft/sp-http';\r\n\r\n//import { CurrentUser } from '@pnp/sp/src/siteusers';\r\n//import SPUser from '@microsoft/sp-page-context';\r\n\r\nexport interface IMyLibrariesWebPartProps {\r\n  description: string;\r\n}\r\n\r\nexport interface ISPLists {\r\n  value: ISPList[];\r\n }\r\n\r\n export interface ISPList {\r\n  Title: string; // this is the library name\r\n  Id: string;\r\n  URL: string; // url to link to the library\r\n  Department:string;\r\n  //AnncURL:string;\r\n //DeptURL:string;\r\n  //CalURL:string;\r\n  //a85u:string; // this is the LINK URL\r\n }\r\n\r\n //global vars\r\n var userDept = \"\";\r\n\r\nexport default class MyLibrariesWebPart extends BaseClientSideWebPart<IMyLibrariesWebPartProps> {\r\n\r\n  // main promoise method, 1st we get the department, second chain is a REST Call to query the list\r\n// third we get the list data and figure out the document libraries\r\ngetuser = new Promise((resolve,reject) => {\r\n  // SharePoint PnP Rest Call to get the User Profile Properties\r\n  return sp.profiles.myProperties.get().then(function(result) {\r\n    var props = result.UserProfileProperties;\r\n    var propValue = \"\";\r\n    var userDepartment = \"\";\r\n\r\n    props.forEach(function(prop) {\r\n      //this call returns key/value pairs so we need to look for the Dept Key\r\n      if(prop.Key == \"Department\"){\r\n        // set our global var for the users Dept.\r\n        userDept += prop.Value;\r\n      }\r\n    });\r\n    return result;\r\n  }).then((result) =>{\r\n    this._getListData().then((response) =>{\r\n      this._renderList(response.value);\r\n    });\r\n  });\r\n\r\n});\r\n\r\n// main method to build html\r\n  public render(): void {\r\n    this.domElement.innerHTML = `\r\n    <h1>My Team Libraries</h1>\r\n      <h3><div id=\"docLibNames\"/></h3>\r\n      `;\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n  \r\n  // main REST Call to the list...passing in the deaprtment into the call to \r\n  //return a single list item\r\n  public _getListData(): Promise<ISPLists> {  \r\n    return this.context.spHttpClient.get(`https://girlscoutsrv.sharepoint.com/_api/web/lists/GetByTitle('TeamDashboardLibraries')/Items?$filter=Department eq '`+ userDept +`'`, SPHttpClient.configurations.v1)\r\n      .then((response: SPHttpClientResponse) => {\r\n        return response.json();\r\n      });\r\n   }\r\n\r\n private _renderList(items: ISPList[]): void {\r\n  let html: string = '';\r\n  let libHTML: string ='';\r\n\r\n  var siteURL = \"\";\r\n  items.forEach((item: ISPList) => {\r\n    console.log(\"Library Name: \" + item.Title);\r\n    console.log(\"Department: \"+ item.Department);\r\n    console.log(\"URL String: \" + item.URL);\r\n\r\n    html += `\r\n   <ul class=\"\">\r\n     <li class=\"\">\r\n       <a href=\"${item.URL}><span class=\"ms-font-l\">${item.Title}</a></span>\r\n     </li>\r\n   </ul>`\r\n\r\n  });\r\n \r\n\r\n  const listContainer: Element = this.domElement.querySelector('#docLibNames');\r\n  listContainer.innerHTML = html;\r\n}\r\n  \r\n// this is required to use the SharePoint PnP shorthand REST CALLS\r\n   public onInit():Promise<void> {\r\n     return super.onInit().then (_=> {\r\n       sp.setup({\r\n         spfxContext:this.context\r\n       });\r\n     });\r\n   }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('description', {\r\n                  label: strings.DescriptionFieldLabel\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}